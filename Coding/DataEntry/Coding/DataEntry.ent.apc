{Application 'DATAENTRY' logic file generated by CSPro}

{
	TODO: set operator id to CODER code
	If LCompleted = 11 ad number of persons in household are <=10 then change Lcompleted to 88
	Change all Occupation and Industry codes in the excel file to UPPERCASE
}
PROC GLOBAL
//--------------------------Variable Declaration----------------------------------------
numeric	len,		//Length of text
		sel,		//select case
		ok,
		searchflag,		//if search was successful
		headindex,		//finds head of household
		;

string	caselabel,		//sets label for the case
		industrycode,
		occupationcode,
		;

//-------------------------Function Declaration------------------------------------------
//Function Looks for first 
function lookupOccupation(string text)
	lookupOccupation = selcase(OCCUPATION_CODES_DICT,"")
		include(LU_OCCUPATION) where pos(strip(text[1:3]),LU_OCCUPATION);		//searches for the first 3 characters of the text
end;

PROC LABOURFORCE_FF

PROC LABOURFORCE_QUEST
preproc
	set errmsg(operator,"Press 'Enter' to dismiss",13);
	setoperatorid(sysparm("UNAME"));

postproc
	//errmsg("%d - %s",visualvalue(CODER),sysparm("CODER"));
	if visualvalue(CODER) in notappl,default then
		CODER = tonumber(sysparm("CODER"));
		headindex = seek(LRTH = 0);
		caselabel = maketext("%S-%02d-%03d-%03d-%d-%03d: Coded (%v)",strip(LLAST_NAME(headindex)),RNDNO,EDNO,PARNO,STRATUM,HHNO, getlabel(CODER_VS1, CODER) );
		setcaselabel(LABOURFORCE_DICT,caselabel);
	endif;

//-----------------------------------------------------------------------------
PROC LIDNO
preproc
	//check that person is eligible to be interviewed
	if LELIGIBLE <> 1 then		//if not eligible
		skip to next;
	endif;
	
	if LPREVVISIT = 3 then		//if no longer a member of the household
		skip to next;
	endif;
	
//---------------------------------------------------
PROC OCCUPTR
preproc
	ask if length(strip(OCCUPTR_TEXT)) > 0;
	
postproc
	if length(strip($)) = 0 then
		clear(AUXIL_DICT);
		AUXILTYPE = 1;
		AUXILKEY = OCCUPTR_TEXT;
		enter AUXIL_FF;
		$ = occupationcode;
	else
		ok = loadcase(OCCUPATION_CODES_DICT,$);
		if ok <> 1 then
			reenter;
		endif;
	endif;

//-----------------------------------------------------------------------------
PROC OCCTRAINED
preproc
	ask if length(strip(OCCTRAINED_TEXT)) > 0;

postproc
	if length(strip($)) = 0 then
		clear(AUXIL_DICT);
		AUXILTYPE = 1;
		AUXILKEY = OCCTRAINED_TEXT;
		enter AUXIL_FF;
		$ = occupationcode;
	else
		ok = loadcase(OCCUPATION_CODES_DICT,$);
		if ok <> 1 then
			reenter;
		endif;
	endif;

//-----------------------------------------------------------------------------
PROC LSTOCCUP
preproc
	ask if length(strip(LSTOCCUP_TEXT)) > 0;

postproc
	if length(strip($)) = 0 then
		clear(AUXIL_DICT);
		AUXILTYPE = 1;
		AUXILKEY = LSTOCCUP_TEXT;
		enter AUXIL_FF;
		$ = occupationcode;
	else
		ok = loadcase(OCCUPATION_CODES_DICT,$);
		if ok <> 1 then
			reenter;
		endif;
	endif;

//-----------------------------------------------------------------------------
PROC LSTINDUS_SECTOR
preproc
	ask if length(strip(LSTINDUS_TEXT)) > 0;
	
//------------------------------------------------------
PROC LSTINDUS
preproc
	ask if length(strip(LSTINDUS_TEXT)) > 0;

postproc
	if length(strip($)) = 0 then
		clear(AUXIL_DICT);
		AUXILTYPE = 2;
		AUXILKEY = LSTINDUS_TEXT;
		enter AUXIL_FF;
		$ = industrycode;
	else
		ok = loadcase(INDUSTRY_CODES_DICT,$);
		if ok <> 1 then
			reenter;
		endif;
	endif;

//-----------------------------------------------------------------------------
PROC OCCUP
preproc
	ask if length(strip(OCCUP_TEXT)) > 0;
	
postproc
	if length(strip($)) = 0 then
		clear(AUXIL_DICT);
		AUXILTYPE = 1;
		AUXILKEY = OCCUP_TEXT;
		enter AUXIL_FF;
		$ = occupationcode;
	else
		ok = loadcase(OCCUPATION_CODES_DICT,$);
		if ok <> 1 then
			reenter;
		endif;
	endif;

//-----------------------------------------------------------------------------
PROC SOCCUP
preproc
	ask if length(strip(SOCCUP_TEXT)) > 0;

postproc
	if length(strip($)) = 0 then
		clear(AUXIL_DICT);
		AUXILTYPE = 1;
		AUXILKEY = SOCCUP_TEXT;
		enter AUXIL_FF;
		$ = occupationcode;
	else
		ok = loadcase(OCCUPATION_CODES_DICT,$);
		if ok <> 1 then
			reenter;
		endif;
	endif;

//-----------------------------------------------------------------------------
PROC INDUS_SECTOR
preproc
	ask if length(strip(INDUS_TEXT)) > 0;
	
//------------------------------------------------------
PROC INDUS
preproc
	ask if length(strip(INDUS_TEXT)) > 0;

postproc
	if length(strip($)) = 0 then
		clear(AUXIL_DICT);
		AUXILTYPE = 2;
		AUXILKEY = INDUS_TEXT;
		enter AUXIL_FF;
		$ = industrycode;
	else
		ok = loadcase(INDUSTRY_CODES_DICT,$);
		if ok <> 1 then
			reenter;
		endif;
	endif;

//-----------------------------------------------------------------------------
PROC SINDUS_SECTOR
preproc
	ask if length(strip(SINDUS_TEXT)) > 0;
	
//------------------------------------------------------
PROC SINDUS
preproc
	ask if length(strip(SINDUS_TEXT)) > 0;

postproc
	if length(strip($)) = 0 then
		clear(AUXIL_DICT);
		AUXILTYPE = 2;
		AUXILKEY = SINDUS_TEXT;
		enter AUXIL_FF;
		$ = industrycode;
	else
		ok = loadcase(INDUSTRY_CODES_DICT,$);
		if ok <> 1 then
			reenter;
		endif;
	endif;

//-----------------------------------------------------------------------------
PROC FOCCUP
preproc
	ask if length(strip(FOCCUP_TEXT)) > 0;

postproc
	if length(strip($)) = 0 then
		clear(AUXIL_DICT);
		AUXILTYPE = 1;
		AUXILKEY = FOCCUP_TEXT;
		enter AUXIL_FF;
		$ = occupationcode;
	else
		ok = loadcase(OCCUPATION_CODES_DICT,$);
		if ok <> 1 then
			reenter;
		endif;
	endif;

//-----------------------------------------------------------------------------
PROC INCINDUS_SECTOR
preproc
	ask if length(strip(INCINDUS_TEXT)) > 0;
	
//------------------------------------------------------
PROC INCINDUS
preproc
	ask if length(strip(INCINDUS_TEXT)) > 0;

postproc
	if length(strip($)) = 0 then
		clear(AUXIL_DICT);
		AUXILTYPE = 2;
		AUXILKEY = INCINDUS_TEXT;
		enter AUXIL_FF;
		$ = industrycode;
	else
		ok = loadcase(INDUSTRY_CODES_DICT,$);
		if ok <> 1 then
			reenter;
		endif;
	endif;

//-----------------------------------------------------------------------------
PROC INCOCCUP
preproc
	ask if length(strip(INCOCCUP_TEXT)) > 0;

postproc
	if length(strip($)) = 0 then
		clear(AUXIL_DICT);
		AUXILTYPE = 1;
		AUXILKEY = INCOCCUP_TEXT;
		enter AUXIL_FF;
		$ = occupationcode;
	else
		ok = loadcase(OCCUPATION_CODES_DICT,$);
		if ok <> 1 then
			reenter;
		endif;
	endif;

//-----------------------------------------------------------------------------
PROC AUXILTXT
preproc
	//trace (on);
	//set trace;
	{indicate type of listing}
	if AUXILTYPE = 1 then
		$ = "Occupation";
	else
		$ = "Industry";
	endif;


PROC AUXILKEY

	{return length of string without blanks. If length >= 3 and occupation or industry text
	is found on corresponding data file, the matching selection window is opened. }

		
	if AUXILTYPE = 1 then
		{if length >= 3 and text for occupation (AUXILKEY) matches text in OCC.DAT}
		Sel = selcase(OCCUPATION_CODES_DICT,"")
			include(LU_OCCUPATION) where pos(strip($),LU_OCCUPATION);
			trace("occupation=%s, CODE=%s, sel=%d",strip(LU_OCCUPATION),LU_BARSOC_CODE,sel);
	endif;
	if AUXILTYPE = 2 then
			{if length >= 3 and text for industry (AUXILKEY) matches text in IND.DAT}
		Sel = selcase(INDUSTRY_CODES_DICT,"")
			include(INDUSTRY) where pos(strip($),INDUSTRY);
			trace("Industry=%s, Code=%s",INDUSTRY,ISIC_V4_CODE);
	endif;

	{if selection is found, then assign code to occupation or industry field.}
	if Sel = 1 then
		
		if AUXILTYPE = 1 then
			AUXILCODE = LU_BARSOC_CODE;
			AUXILKEY = LU_OCCUPATION;
			occupationcode = LU_BARSOC_CODE;
			trace("Auxil code=%s, Auxil key=%s",AUXILCODE,AUXILKEY);
		else
			AUXILCODE = ISIC_V4_CODE;
			AUXILKEY = INDUSTRY;
			industrycode = ISIC_V4_CODE;
			trace("Auxil code=%s, Auxil key=%s",AUXILCODE,AUXILKEY);
		endif;
	
	else
		errmsg("Invalid entry");
		reenter;
	
	endif;

//-----------------------------------------------------------------------------
