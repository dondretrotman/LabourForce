{Application 'LISTING' logic file generated by CSPro}
PROC GLOBAL
numeric roundtemp,edtemp,parishtemp,stratumtemp,buildingtemp,sampletemp,		//stores ID variables to check for changes
		i,j;		//general counters

string	idno,			//case ID
		caselabel,		//old case label
		newcaselabel;	//new case label
function OnStop()
	//execpff("../Menu/Menu.pff", stop);
end;

PROC LISTING_FF


PROC LISTING_QUEST
preproc
	//trace(on);
	//trace(on,"traces.txt");
	//set trace;
postproc
	//check and resolve mismatched IDs
	if roundtemp <> LSTROUND or edtemp <> LSTED or parishtemp <> LSTPARISH or stratumtemp <> LSTSTRATUM or buildingtemp <> LSTBUILDING or sampletemp <> LSTSAMPLE then
		if  roundtemp <> notappl and edtemp <> notappl and parishtemp <> notappl and stratumtemp <> notappl and sampletemp <> notappl then		//if temp variables are valid
			idno = maketext("%2d%3d%3d%1d%3d", roundtemp,edtemp,parishtemp,stratumtemp,sampletemp);
			if loadcase(LABOURFORCE_DICT,idno) then		//if a case exists with the old IDs then load that case and update
				//errmsg("begin rnd=|%V|%V|, ed=|%V|%V|, par=|%V|%V|, str=|%V|%V|, sam=|%V|%V|",roundtemp,RNDNO,edtemp,EDNO,parishtemp,PARNO,stratumtemp,STRATUM,sampletemp,HHNO);
				//set new case IDs
				RNDNO = LSTROUND;
				EDNO = LSTED;
				PARNO = LSTPARISH;
				STRATUM = LSTSTRATUM;
				HHNO = LSTSAMPLE;
				
				//set new case label based on new case ID
				caselabel = getcaselabel(LABOURFORCE_DICT);
				i = pos("-",caselabel);
				j = pos(":",caselabel);		//set j to the last character of the caselabel, I do this by searching for a character that is not in the caselabel
				if j = 0 then 
					j = 99;		//failing that I just set it to 99, not elegant lol
				endif;
				newcaselabel = caselabel[1:i]+maketext("%2d-%3d-%3d-%1d-%3d",LSTROUND,LSTED,LSTPARISH,LSTSTRATUM,LSTSAMPLE);
				setcaselabel(LABOURFORCE_DICT,newcaselabel);
				
				if not writecase(LABOURFORCE_DICT) then		//write new case with new ID
					errmsg("cannot write case, case ID's probably don't match now!");
				else
					delcase(LABOURFORCE_DICT,idno);		//delete old case with old ID only if new case was written
					errmsg("Successfully changed questionnaire ID");
				endif;
				//errmsg("begin rnd=|%V|%V|, ed=|%V|%V|, par=|%V|%V|, str=|%V|%V|, sam=|%V|%V|",roundtemp,RNDNO,edtemp,EDNO,parishtemp,PARNO,stratumtemp,STRATUM,sampletemp,HHNO);
			else
				errmsg("cannot load case %v",idno);
			endif;
		endif;
	endif;
		
	if getos() = 20 then		//if windows then don't immediately run menu program
		execpff("../Menu/Menu.pff");
	endif;
	
	
//------------------------------------------------------------
PROC LSTROUND
preproc
	if sysparm("MODE") = "EDIT" then				//If 
		if visualvalue(LSTROUND) = notappl then		//if round is blank
			LSTROUND = tonumber(sysparm("LSTROUND"));		//Go to the pff file and get the system parameter named rndno. Change it to number and assign to variable
			setproperty(LSTROUND,"PROTECTED","Yes");	//and set the field to proctected
		endif;
		if visualvalue(LSTED) = notappl then
			LSTED = tonumber(sysparm("LSTED"));	
			setproperty(LSTED,"PROTECTED","Yes");
		endif;
		if visualvalue(LSTPARISH) = notappl then
			LSTPARISH = tonumber(sysparm("LSTPARISH"));	
			setproperty(LSTPARISH,"PROTECTED","Yes");
		endif;
		if visualvalue(LSTSTRATUM) = notappl then
			LSTSTRATUM = tonumber(sysparm("LSTSTRATUM"));	
			setproperty(LSTSTRATUM,"PROTECTED","Yes");
		endif;
		if visualvalue(LSTBUILDING) = notappl then
			LSTBUILDING = tonumber(sysparm("LSTBUILDING"));	
			setproperty(LSTBUILDING,"PROTECTED","Yes");
		endif;
		if visualvalue(LSTSAMPLE) = notappl then
			LSTSAMPLE = tonumber(sysparm("LSTSAMPLE"));	
			setproperty(LSTSAMPLE,"PROTECTED","Yes");
		endif;
		if visualvalue(LSTENUMCODE) = notappl then
			LSTENUMCODE = tonumber(sysparm("LSTENUMCODE"));
			setproperty(LSTENUMCODE,"PROTECTED","Yes");
		endif;
	elseif sysparm("MODE") = "DEFAULT" then			//if launching as an enumerator then just fill out enuerator code and ED
		if visualvalue(LSTROUND) = notappl then		//if round is blank
			LSTROUND = tonumber(sysparm("LSTROUND"));		//Go to the pff file and get the system parameter named rndno. Change it to number and assign to variable
			setproperty(LSTROUND,"PROTECTED","Yes");	//and set the field to proctected
		endif;
		if visualvalue(LSTED) = notappl then
			LSTED = tonumber(sysparm("LSTED"));
			setproperty(LSTED,"PROTECTED","Yes");
		endif;
		if visualvalue(LSTENUMCODE) = notappl then
			LSTENUMCODE = tonumber(sysparm("LSTENUMCODE"));
			setproperty(LSTENUMCODE,"PROTECTED","Yes");
		endif;
	endif;

	{this bit of code checks whether the ID fields are filled. 
		If they are filled, they are stored in temporary variables. 
	After the questionnaire, they are compared again to see if they were changed, 
		if they were, we change the corresponding ID in the questionnaire and enumerator report
	this is so that if an enumerator mistypes an ID (which happens sometimes) and tries to correct it, info will not be lost due to mismatched IDs}
	
	if visualvalue(LSTROUND) <> notappl or visualvalue(LSTED) <> notappl or visualvalue(LSTPARISH) <> notappl or visualvalue(LSTSTRATUM) <> notappl or visualvalue(LSTBUILDING) <> notappl or visualvalue(LSTSAMPLE) <> notappl then		//if any ID fields are filled
		//store temp variables
		roundtemp = visualvalue(LSTROUND);
		edtemp = visualvalue(LSTED);
		parishtemp = visualvalue(LSTPARISH);
		stratumtemp = visualvalue(LSTSTRATUM);
		buildingtemp = visualvalue(LSTBUILDING);
		sampletemp = visualvalue(LSTSAMPLE);
		//errmsg("begin rnd=|%V|%V|, ed=|%V|%V|, par=|%V|%V|, str=|%V|%V|, bui=|%V|%V|, sam=|%V|%V|",roundtemp,visualvalue(LSTROUND),edtemp,visualvalue(LSTED),parishtemp,visualvalue(LSTPARISH),stratumtemp,visualvalue(LSTSTRATUM),buildingtemp,visualvalue(LSTBUILDING),sampletemp,visualvalue(LSTSAMPLE));
	endif;
	noinput;


postproc
	setcaselabel(LISTING_DICT, maketext("%V-%V-%V: %s (%s)",LSTED,LSTBUILDING,LSTSAMPLE,strip(LSTLNAME),strip(LSTREMARKS)));

//--------------------------------------------------------------------------------
PROC LSTED
onfocus
//	noinput;
PROC LSTPARISH
onfocus
	recode LSTED	=>	$;
			1-181	=>	201;	//St. Michael
			182-295	=>	202;	//Christ Church
			196-335	=>	203;	//St. George
			336-397	=>	204;	//St. Philip
			398-418	=>	205;	//St. John
			419-479	=>	206;	//St. James
			480-508	=>	207;	//St. Thomas
			509-521 =>	208;	//St. Joseph
			522-532	=>	209;	//St. Andrew
			533-559	=>	210;	//St. Peter
			560-583	=>	211;	//St. Lucy
	endrecode;
	noinput;
	
//--------------------------------------------------------
PROC LSTSTRATUM
onfocus
	recode LSTPARISH => $;
		201 => 1;
		202,204 => 2;
		203,206,207 => 3;
		205,208-211 => 4;
	endrecode;
	noinput;
	
//-------------------------------------------------------
PROC LSTNO
preproc
	$ = curocc();		//automatically enter the ID
	noinput;
	
//--------------------------------------------------------
PROC LSTENUMCODE
onfocus
	noinput;
PROC LSTLNAME
postproc
	if $ = "" then		//if no name
		errmsg("Please enter a last name");
		reenter;
	endif;
	
//--------------------------------------------------------------------
PROC LSTFNAME
postproc
	if $ = "" then		//if no name
		errmsg("Please enter a first name");
		reenter;
	endif;
	
//--------------------------------------------------------------------
PROC LSTTELEPHONE

onfocus
	set behavior($) canenter(notappl) on (noconfirm);
	
postproc
	string telnum = maketext("%V",$);		//convert to string to do regex
	if regexmatch(telnum,"^([0-9])(7)$") = 0 and telnum <> "" then			//phone number must be in the format #######
		errmsg("Phone number must have 7 digits");
		reenter;
	endif;

//-----------------------------------------------------------
PROC LSTREMARKS

onfocus
	set behavior($) canenter(notappl) on (noconfirm);

postproc
	setcaselabel(LISTING_DICT, maketext("%V-%V-%V: %s (%s)",LSTED,LSTBUILDING,LSTSAMPLE,strip(LSTLNAME),strip(LSTREMARKS)));

//-----------------------------------------------------------
{PROC LSTSTDATE
onfocus
	set behavior($) canenter(notappl) on (noconfirm);
	noinput;

//-----------------------------------------------------------
PROC LSTFNDATE
onfocus
	set behavior($) canenter(notappl) on (noconfirm);
	noinput;

//-----------------------------------------------------------}
