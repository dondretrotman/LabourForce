{Application 'MENU' logic file generated by CSPro}
PROC GLOBAL
//--------------------------------Variable Declaration------------------------------------
//file pffFile;

string 	rnd_ed;		//round and ED number to be downloaded

numeric deleteflag;

//----------------------------------Array Declaration-------------------------------------
array string	vsCode(99);		//valueset codes
array string 	vsLabel(99);	//valueset labels

//--------------------------------Function declaration------------------------------------
//Launches the questionnaire
function LaunchQuestionnaire()
	execpff("..\Questionnaire\Labourforce.pff", stop);
end;

//Launches the listing record
function LaunchListing()
	execpff("..\Listing\Listing.pff", stop);
end;

//Uploads all data
function uploadData()
	if syncconnect(FTP,"64.119.198.70","Census","Census2020ADM!N") then		//connect to FTP when outside of the Government WAN
		syncdata(PUT,LABOURFORCE_DICT);		//Upload Lacourforce data
		syncdata(PUT,LISTING_DICT);		//Upload listing
		syncfile(PUT,"../Questionnaire/Labourforce.cslog",maketext("LabourforceLogs/Labourforce%s.cslog",getdeviceid()));		//Upload paradata logs
		syncfile(PUT,"../Photos/*.jpg", "/CSPro/Photos/");
		syncfile(GET,"/CSPro/Update/Questionnaire/Labourforce.pen","../Questionnaire/Labourforce.pen");		//update questionnaire
		syncfile(GET,"/CSPro/Update/Listing/Listing.pen","../Listing/Listing.pen");		//update Listing
		syncfile(GET,"/CSPro/Update/Menu/Menu.pen","../Menu/Menu.pen");		//update Menu
		syncdisconnect();		//disconnect
		errmsg("Data upload was successful");
	elseif syncconnect(FTP,"10.129.20.110","Census","Census2020ADM!N") then		//connect to FTP when within the Government WAN
		syncdata(PUT,LABOURFORCE_DICT);		//Upload Lacourforce data
		syncdata(PUT,LISTING_DICT);		//Upload listing
		syncfile(PUT,"../Questionnaire/Labourforce.cslog",maketext("LabourforceLogs/Labourforce%s.cslog",getdeviceid()));		//Upload paradata logs
		syncfile(PUT,"../Photos/*.jpg", "/CSPro/Photos/");
		syncfile(GET,"/CSPro/Update/Questionnaire/Labourforce.pen","../Questionnaire/Labourforce.pen");		//update questionnaire
		syncfile(GET,"/CSPro/Update/Listing/Listing.pen","../Listing/Listing.pen");		//update Lising
		syncfile(GET,"/CSPro/Update/Menu/Menu.pen","../Menu/Menu.pen");		//update Menu
		syncdisconnect();		//disconnect
		errmsg("Data upload was successful");
	else
		errmsg("Data upload failed, Please try again");
	endif;
end;

//update app only
function updateApp()
	if syncconnect(FTP,"64.119.198.70","Census","Census2020ADM!N") then		//connect to FTP when outside of the Government WAN
		syncfile(GET,"/CSPro/Update/Questionnaire/Labourforce.pen","../Questionnaire/Labourforce.pen");		//update questionnaire
		syncfile(GET,"/CSPro/Update/Listing/Listing.pen","../Listing/Listing.pen");		//update Listing
		syncfile(GET,"/CSPro/Update/Menu/Menu.pen","../Menu/Menu.pen");		//update Menu
		syncdisconnect();		//disconnect
		errmsg("App update successful");
	elseif syncconnect(FTP,"10.129.20.110","Census","Census2020ADM!N") then		//connect to FTP when within the Government WAN
		syncfile(GET,"/CSPro/Update/Questionnaire/Labourforce.pen","../Questionnaire/Labourforce.pen");		//update questionnaire
		syncfile(GET,"/CSPro/Update/Listing/Listing.pen","../Listing/Listing.pen");		//update Lising
		syncfile(GET,"/CSPro/Update/Menu/Menu.pen","../Menu/Menu.pen");		//update Menu
		syncdisconnect();		//disconnect
		errmsg("App update successful, Exit app to complete");
	else
		errmsg("App update failed, Please try again");
	endif;
end;

//downloads Data based on ED
function downloadData(string rnd_edno)
	errmsg("Attempting to download all data from Round :%s, ED :%s",rnd_edno[1:2],rnd_edno[3:3]);
	errmsg("Data dictionary value Round :%V, ED :%V", RNDNO,EDNO);
	if syncconnect(FTP,"64.119.198.70","Census","Census2020ADM!N") then		//connect to FTP when outside of the government WAN
		syncdata(GET,LABOURFORCE_DICT,rnd_edno);		//get labourforce data for round and ED
		syncdata(GET,LISTING_DICT,rnd_edno);			//get listing data for round and ED
		//syncfile(GET,"CSPro/Photos/*.jpg","../Photos/");
		syncfile(GET,"/CSPro/Update/Questionnaire/Labourforce.pen","../Questionnaire/Labourforce.pen");		//update questionnaire
		syncfile(GET,"/CSPro/Update/Listing/Listing.pen","../Listing/Listing.pen");		//update Lising
		syncfile(GET,"/CSPro/Update/Menu/Menu.pen","../Menu/Menu.pen");		//update Menu
		syncdisconnect();		//disconnect
		errmsg("Download of round %s, ED %s was successful",rnd_edno[1:2],rnd_edno[3:3]);
	elseif syncconnect(FTP,"10.129.20.110","Census","Census2020ADM!N") then		//connect to FTP when outside of the government WAN
		syncdata(GET,LABOURFORCE_DICT,rnd_edno);		//get labourforce data for round and ED
		syncdata(GET,LISTING_DICT,rnd_edno);			//get listing data for round and ED
		//syncfile(GET,"CSPro/Photos/*.jpg","../Photos/");
		syncfile(GET,"/CSPro/Update/Questionnaire/Labourforce.pen","../Questionnaire/Labourforce.pen");		//update questionnaire
		syncfile(GET,"/CSPro/Update/Listing/Listing.pen","../Listing/Listing.pen");		//update Lising
		syncfile(GET,"/CSPro/Update/Menu/Menu.pen","../Menu/Menu.pen");		//update Menu
		syncdisconnect();		//disconnect
		errmsg("Download of round %s, ED %s was successful",rnd_edno[1:2],rnd_edno[3:3]);
	else
		errmsg("Download of round %s, ED %s failed, Please try again",rnd_edno[1:2],rnd_edno[3:3]);
	endif;
end;

//deletes a questionnaire
function deleteQuestionnaire()
	deleteflag = 0;
	errmsg("Are you sure you want to flag the questionnaire with ID = %V? for deletion", CHOOSE_QUESTIONNAIRE)
	select("Yes, flag for deletion",continue,"No, flag to remain",SUPERVISOR_MENU);
	
	//delcase(LABOURFORCE_DICT,CHOOSE_QUESTIONNAIRE);		//works
	
	loadcase(LABOURFORCE_DICT,CHOOSE_QUESTIONNAIRE);
	DELETE_FLAG = 1;		//mark case for deletion
	writecase(LABOURFORCE_DICT);
	deleteflag = 1;
	errmsg("Case set for deletion");
end;

PROC MENU_FF

PROC LOGIN

	if $ = 1 then	//interviewer
		skip to INTERVIEWER_MENU;
	elseif $ = 2 then 	//supervisor
		skip to SUPERVISOR_MENU;
	elseif $ = 3 then		//update only
		updateApp();
		reenter;		
	elseif $ = 9 then
		stop(1);
	endif;
	
//---------------------------------------------------------
PROC INTERVIEWER_MENU
onfocus
	$ = notappl;
	
postproc
	if $ = 1 then	//Fill questionnaire
		LaunchQuestionnaire();
	elseif $ = 2 then
		LaunchListing();
	elseif $ = 7 then		//upload data
		uploadData();
	elseif $ = 9 then		//logout
		move to LOGIN;
	endif;
reenter;		//don't leave the menu

//---------------------------------------------------------
PROC SUPERVISOR_MENU
onfocus
	$ = notappl;		//don't show the last selection
	if deleteflag = 0 then
		loadcase(LABOURFORCE_DICT,CHOOSE_QUESTIONNAIRE);
		DELETE_FLAG = 0;		//keep case
		writecase(LABOURFORCE_DICT);
	endif;
	
postproc
	if $ = 1 then		//download data
		skip to CHOOSE_ROUND;
	elseif $ = 2 then		//open listing
		launchListing();
	elseif $ = 3 then		//open questionnaire
		launchQuestionnaire();
	elseif $ = 4 then		//delete questionnaire
		skip to CHOOSE_QUESTIONNAIRE;
	elseif $ = 9 then		//logout
		move to LOGIN;
	endif;
reenter;		//don't leave the menu

//---------------------------------------------------------
PROC CHOOSE_ED
//DEBUG: Doesn't work, text formatting doesn't match data dictionary somehow
Postproc
	rnd_ed = maketext("%2d%3d", CHOOSE_ROUND,CHOOSE_ED);
	downloadData(rnd_ed);
	
	move to LOGIN;

//---------------------------------------------------------
PROC CHOOSE_QUESTIONNAIRE
onfocus
	numeric nextEntry = 1;
	numeric headindex;
	forcase LABOURFORCE_DICT do
		loadcase(LABOURFORCE_DICT,RNDNO,EDNO,PARNO,STRATUM,HHNO);
		if VACANT = 2 then		//if not a vacant household, include name
			headindex = seek(LRTH = 0);
			vscode(nextEntry) = maketext("%V%V%V%V%V",RNDNO,EDNO,PARNO,STRATUM,HHNO);
			vslabel(nextEntry) = maketext("%S-%02d-%03d-%03d-%d-%03d (%V)",strip(LLAST_NAME(headindex)),RNDNO,EDNO,PARNO,STRATUM,HHNO, getlabel(DELETE_FLAG_VS1, DELETE_FLAG) );
			inc(nextEntry);
		else		//if a vacant household, use vacant label
			vscode(nextEntry) = maketext("%V%V%V%V%V",RNDNO,EDNO,PARNO,STRATUM,HHNO);
			vslabel(nextEntry) = maketext("Vacant-%02d-%03d-%03d-%d-%03d (%V)",RNDNO,EDNO,PARNO,STRATUM,HHNO,getlabel(DELETE_FLAG_VS1, DELETE_FLAG));
			inc(nextEntry);
		endif;
	endfor;
	
	vscode(nextEntry) = "";
	setvalueset($,vsCode,vsLabel);

postproc
	deleteQuestionnaire();

	move to SUPERVISOR_MENU;

//---------------------------------------------------------
