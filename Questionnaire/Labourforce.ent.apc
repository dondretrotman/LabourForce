{Application 'LABOURFORCE' logic file generated by CSPro}
{
Continuous Labour Force Sample Survey (CLFSS) CAPI application
Author: Dondre Trotman
Date: 2018/07/17
Version: 0.1

Notes:

Todo:
	Codes for the following must be added
		Occupation, industry, no of males/females, Years (date of birth and interview), sample no, visit no, interviewer, supervisor, enumerator, coder, number of earners, household size, country codes age range institution codes
	DONE Skip patterns must be added
	Add occupation codes

}
PROC GLOBAL
//----------------------------VARIABLE DECLARATION---------------------------------------------
numeric i,				//general variable
		tempage,		//for calcuating age
		;
		
string 	caselabel,		//stores the label for the current case
		photoDir,		//Stores the location of the photos folder
		photoFileName 	//filename of photo
		;
		
//-----------------------------Function Declarations--------------------------------------------
//Function uses device's GPS feature to get Location
function getgps()
	gps(open);
	if gps(read,60,10,"Reading GPS, Please wait...") = 1 then	//read up to 60 seconds. if successful...
		//execsystem(maketext("gps:%f,%f", gps(latitude),gps(longitude)));
		if accept(maketext("Save this location? %f, %f",gps(latitude),gps(longitude)),"Yes","No") = 1 then	//if yes
			LATITUDE = gps(latitude);
			LONGITUDE = gps(longitude);
		endif;
	else
		errmsg("Gps location failed, Please try again");
		LATITUDE = notappl;
		LONGITUDE = notappl;
	endif;
	gps(close);
end;

//Function to take a photo using the device's camera. It saves to a filename matching the ID items
function takePhoto()
	if direxist(photoDir) then
		execsystem(maketext("camera:%s",photoFileName));
	else
		dircreate(photoDir);
		execsystem(maketext("camera:%s",photoFileName));
	endif;
end;

//Function to view photo of current case
function viewPhoto()
	if direxist(photoDir) then
		execsystem(maketext("view:%s", photoFileName));
	else
		dircreate(photoDir);
		execsystem(maketext("view:%s", photoFileName));
	endif;
end;

PROC LSTWRKD_OTHER
preproc
	//only ask if other is selected
	ask if LSTWRKD = 5;
	
//-----------------------------------------------------
PROC LABOURFORCE_FF
preproc
//---------------------------Declare Variables-----------------------------------
	photoFileName = pathname(CSEntry) + maketext("Menu/Photos/%03d-%03d-%03d-%d-%03d.jpg", visualvalue(RNDNO),visualvalue(EDNO),visualvalue(PARNO),visualvalue(STRATUM),visualvalue(HHNO));  //DEBUG: Not saving file with Rndno, edno, parno and stratum
	photoDir = pathname(CSEntry) + "Menu/Photos";
	
//---------------------------Userbar definition------------------------------------
	userbar(clear);
	userbar(add button, "Get Location", getgps());		//adds a "Get location" button to get coordinates
	userbar(add button, "Take a photo for the current case", takePhoto());		//adds a button to take a photo of current case. 
	userbar(add button, "View photo of current case", viewPhoto());		//adds a button to view photo of current case
	userbar(show);

PROC LABOURFORCE_QUEST
onfocus
	//Set occurence labels
	do i = 1 while i <= maxocc(LABOURFORCE_REC001) and LFIRST_NAME(i) <> ""
        setocclabel(LABOURFORCE_REC001(i), strip(LFIRST_NAME(i)));   //first roster
        setocclabel(LABOURFORCE_REC000(i), strip(LFIRST_NAME(i)));   //second roster
    enddo;
    
    //DEBUG: DO THIS IN THE CENSUS APP
PROC LATITUDE
{
	//defaults to 0
	if $ = notappl then
		$ = 0;
	endif;
}	
//---------------------------------------------------------------------
PROC LONGITUDE
{
	//defaults to 0
	if $ = notappl then
		$ = 0;
	endif;
}	
//---------------------------------------------------------------------
PROC VOCCUP

preproc
	//only ask if vacant household
	ask if VACANT = 1;
	
//---------------------------------------------------------------------
PROC HH_TYP

	//if vacant household, end questionnaire
	if VACANT = 1 then
		endlevel;
	endif;
	
//---------------------------------------------------------------------
PROC LIDNO
preproc
	$ = curocc();		//automatically enter the ID
	noinput;
	
//--------------------------------------------------------
PROC LNEWMEM

	//if not a new member, don't ask why they joined
	if $ = 2 then
		skip to LRTH;
	endif;
	
//---------------------------------------------------------------------
PROC LREASON_OTHER
preproc
	//only ask if other is selected
	ask if LREASON = 5;
	
//-----------------------------------------------------
PROC LRTH

	
	//Set case labels in case listings to an easier to read format to include name of head
	if $ = 0 then
		caselabel = maketext("%s-%03d-%03d-%03d-%d-%03d",strip(LLAST_NAME),RNDNO,EDNO,PARNO,STRATUM,HHNO);
		setcaselabel(LABOURFORCE_DICT,caselabel);
	endif;
	
//---------------------------------------------------------------------
PROC LAGE

preproc
	//auto fill the age based on the DOB
	if LDOB_YEAR <> 9999 and LDOB_MONTH <> 99 and LDOB_DAY <> 99 then
		tempage = datediff(LDOB, sysdate("YYYYMMDD"), "Y");
		$ = tempage;
	endif;
	
postproc
	//check that age corresponds to date of birth
	if LDOB_YEAR <> 9999 and LDOB_MONTH <> 99 and LDOB_DAY <> 99 then		//don't check if we don't know the DOB
		tempage = datediff(LDOB, sysdate("YYYYMMDD"), "Y");
		
		if $ <> tempage then
			errmsg("age (%d) does not agree with DOB (%s), please verify",$,edit("9999/99/99",LDOB))
			select("Correct the age", $, "Correct the Date of birth", LDOB,"Keep Age (Don't know Date of Birth)",continue);
			LDOB = notappl;
		endif;
	endif;

//---------------------------------------------------------------------------
PROC ADDPER

	if $ = 2 then
		NUMBER_OF_PERSONS = count(LSEX);		//Helps sets Second roster size
		HH_SZ = count(LSEX);		//prefills Household size variable
		endgroup;
	endif;

//----------------------------------------------------------------------
PROC INTRVW
preproc
	//Set occurence label to person's name
	setocclabel(LABOURFORCE_REC000(curocc()), strip(LFIRST_NAME));

	//check that person is eligible to be interviewed
	if LELIGIBLE <> 1 then		//if not eligible
		skip to next;
	endif;
	
//---------------------------------------------------------------------
PROC HD_HH
	
	//if not head of household, skip to individual details 
	if $ = 2 then
		skip to INDIVNO;
	endif;

//---------------------------------------------------------------------------
PROC LNDTNURE

	//if house is rented, then land is probably rented
	if OCCPNCY in 2,3 then
		$ = 3;
	endif;

//-----------------------------------------------------------
PROC LNDTNURE_OTHER
preproc
	//only ask if other is selected
	ask if LNDTNURE = 5;
	
//-----------------------------------------------------
PROC INDIVNO

	//TODO: prefill information based on household listing ID number
	i = seek(LIDNO = $);
	
	if i = $ then
		SEX = LSEX(i);
		RELHD = LRTH(i);
		BIRTHD = LDOB(i);
		AGE = LAGE(i);
	else
		errmsg("No person with ID #%d was found, please try again",$);
		reenter;
	endif;
	
//---------------------------------------------------------------------------
PROC RELHD

	//compare to HD_HH to verify head of household
	if not ($ = 0 and HD_HH = 1) then	
		if not ($ in 1:8 and HD_HH = 2) then
			errmsg("Relation to head (%d) does not match with Head of shousehold status (%d)",$,HD_HH)
			select("Change relation to head",$,"Change head of household status",HD_HH);
		endif;
	endif;  

//---------------------------------------------------------------------------
PROC RELHD_OTHER
preproc
	//only ask if other is selected
	ask if RELHD = 8;
	
//-----------------------------------------------------
PROC AGE

	//check that age corresponds to date of birth
	tempage = datediff(BIRTHD, sysdate("YYYYMMDD"), "Y");
		
	if $ <> tempage then
		errmsg("age (%d) does not agree with DOB (%s), please verify",$,edit("9999/99/99",BIRTHD))
		select("Correct the age", $, "Correct the Date of birth", BIRTHD,"Keep Age (Don't know Date of Birth",continue);
		BIRTHD = notappl;
	endif;

//---------------------------------------------------------------------------
PROC EDUCLEV_OTHER
preproc
	//only ask if other is selected
	ask if EDUCLEV = 5;
	
//-----------------------------------------------------
PROC QUALLEV_OTHER
preproc
	//only ask if other is selected
	ask if QUALLEV = 9;
	
//-----------------------------------------------------
PROC CTRAINING
	
	//if not currently being trained, skip to if ever trained
	if $ = 2 then
		skip to TRAINEDFOROCC;
	endif;
	
//---------------------------------------------------------------------------
PROC TRAINEDFOROCC

	//if never trained, skip to Worked last week
	if $ = 2 then
		skip to WORKED;
	endif;
	
//---------------------------------------------------------------------------
PROC WORKED

	//if worked, skip to full time or part time
	if $ = 1 then
		skip to FULLPART;
	endif;
	
//---------------------------------------------------------------------------
PROC REGJOB

	//if not absent, skip to Major activity
	if $ = 2 then
		skip to MAJACTV;
	endif;
	
//---------------------------------------------------------------------------
PROC REASABS_OTHER
preproc
	//only ask if other is selected
	ask if REASABS = 7;
	
//-----------------------------------------------------
PROC TIMEABS

	//if has a job, skip to Full time or part time
	if WORKED = 1 then
		skip to FULLPART;
	endif;

//---------------------------------------------------------------------------
PROC MAJACTV_OTHER
preproc
	//only ask if other is selected
	ask if MAJACTV = 6;
	
//-----------------------------------------------------
PROC SEEKING

	//if not seeking work, skip to reason for not seeking work
	if $ = 2 then
		skip to REASNSK;
	endif;
	
//-----------------------------------------------------------------
PROC METHOD

	//skip to last looked for work
	skip to LSTLOOK;
PROC METHOD_OTHER
preproc
	//only ask if other is selected
	ask if METHOD = 6;
	
//-----------------------------------------------------
PROC REASNSK_OTHER
preproc
	//only ask if other is selected
	ask if REASNSK = 8;
	
//-----------------------------------------------------
PROC LSTLOOK

	//if never looked of looked for 4 months or more, skip to Hoping for job
	if $ in 1,4 then
		skip to HPWORK;
	endif;
	
//-----------------------------------------------------------------
PROC WILLING

	//if not willing, skip to ever worked
	if $ = 2 then
		skip to EVERWKD;
	endif;
	
//---------------------------------------------------------------
PROC ABLE

	//if not able, skip to ever worked
	if $ = 2 then
		skip to EVERWKD;
	endif;
	
//---------------------------------------------------------------
PROC EVERWKD

	//if never worked, skip to when first looked for work
	if $ = 2 then
		skip to FRSTLOOK;
	endif;
	
//--------------------------------------------------------------------
PROC LSTWRKD

	//skip to last occupation
	skip to LSTOCCUP;

//-----------------------------------------------------------
PROC FULLPART

	//if full time, skip to more than one job
	if $ = 1 then
		skip to TWOJOBS;
	endif;
	
//-----------------------------------------------------------------
PROC RSNPART_OTHER
preproc
	//only ask if other is selected
	ask if RSNPART = 8;
	
//-----------------------------------------------------
PROC TWOJOBS

	//if not more than one job, skip to employer status
	if $ = 2 then
		skip to EMPLSTAT;
	endif;
	
//---------------------------------------------------------------
PROC RSN2JOBS_OTHER
preproc
	//only ask if other is selected
	ask if RSN2JOBS = 4;
	
//-----------------------------------------------------
PROC EMPL2STAT

preproc
	//only ask if more than one job
	ask if TWOJOBS = 1
	
//--------------------------------------------------------
PROC SOCCUP

preproc
	//only ask if more than one job
	ask if TWOJOBS = 1
	
//--------------------------------------------------------
PROC SINDUS

preproc
	//only ask if more than one job
	ask if TWOJOBS = 1
	
//--------------------------------------------------------
PROC EXPRNCE2

preproc
	//only ask if more than one job
	ask if TWOJOBS = 1
	
//--------------------------------------------------------
PROC EARNGS2

preproc
	//only ask if more than one job
	ask if TWOJOBS = 1
	
//--------------------------------------------------------
PROC AVGEARNS2

preproc
	//only ask if more than one job
	ask if TWOJOBS = 1
	
//--------------------------------------------------------
PROC NHRSWRKD

	//end if worked 40 or more hours
	if HRSWRKD in 10,11 then
		endlevel;
	endif;

//-----------------------------------------------------------------------
		
PROC RSNLESS_OTHER
preproc
	//only ask if other is selected
	ask if RSNLESS = 12;
	
//-----------------------------------------------------
PROC ADDWRK

	//if not willling to do additional work, end interview
	if $ = 2 then
		endgroup;
	endif;

//-----------------------------------------------------------------------
PROC HPWORK

	//if not hoping for job, skip to ever worked
	if $ = 2 then
		skip to WORKBEFO;
	endif;
	
//-----------------------------------------------------------
PROC WORKBEFO

	//if never worked before, skip to main sources of livelihood
	if $ = 2 then
		skip to SCINCOME;
	endif;
	
//---------------------------------------------------------------------
