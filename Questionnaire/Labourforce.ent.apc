{Application 'LABOURFORCE' logic file generated by CSPro}
{
Continuous Labour Force Sample Survey (CLFSS) CAPI application
Author: Dondre Trotman
Date: 2018/07/17
Version: 0.1

Notes:

Todo:
	Implement solution that can tell when an ed in completed
		create a data dictionary that contains info on ED named audit
		It contains logic that compared number of cases in control sheet with completed questinonaire cases 
		When the numbers match, it sets a flag showing the ed is complete
		
	*done* Make GPS mandatory
	Add a No change option that has to be confirmed by supervisors
	Include household metadata
}

PROC GLOBAL
//----------------------------VARIABLE DECLARATION---------------------------------------------
numeric a,i,				//general variable
		tempage,		//for calcuating age
		numheads,		//number of heads of household
		numspouses,		//number of spouses
		headindex,		//index of head
		cases,			//number of cases in ENUMERATIONREPORT
		bldgno,			//Building number
		vsindex;			//valueset index
		
		
string 	caselabel,		//stores the label for the current case
		photoDir,		//Stores the location of the photos folder
		photoFileName, 	//filename of photo
		intenddate,		//end date of interview
		idno,			//case id to be loaded
		promptremarks;	//stores remarks for report
		
		
array string 	vsLabels(99);		//Stores valueset labels
array numeric 	vsNumCodes(99) = 0,...;		//stores valueset codes
		
//-----------------------------Function Declarations--------------------------------------------
//Checks that date is valid. Returns 1 if valid. Returns 0 if invalid
function checkDate(CDYEAR, CDMONTH, CDDAY)
	if not CDYEAR in 1900:sysdate("YYYY"),9999 then
		errmsg("Invalid Year. (=%d)",CDYEAR);
		checkDate = 0;
		exit;
	endif;
	
	if not CDMONTH in 1:12,99 then
		errmsg("Invalid Month. (=%d)",CDMONTH);
		checkDate = 0;
		exit;
	endif;
	
	if CDMONTH in 9,4,6,11 then		//30 days have September, April, June and November
		if not CDDAY in 1:30,99 then
			errmsg("%s does not have %d days. Please confirm.",getlabel(LDOB_MONTH_VS1,CDMONTH),CDDAY);
			checkDate = 0;
		endif;
	elseif CDMONTH in 1,3,5,7,8,10,12 then		//All the rest have 31
		if not CDDAY in 1:31,99 then
			errmsg("%s does not have %d days. Please confirm.",getlabel(LDOB_MONTH_VS1,CDMONTH),CDDAY);
			checkDate = 0;
		endif;
	elseif CDMONTH = 2 and CDYEAR in 1900:2020 then					//Except February alone
		if CDYEAR % 4 = 0 and CDYEAR <> 1900 then		
			if not CDDAY in 1:29,99 then		//Which has 29 days each leap year
				errmsg("%s does not have %d days. Please confirm.",getlabel(LDOB_MONTH_VS1,CDMONTH),CDDAY);
				checkDate = 0;
			endif;	
		else
			if not CDDAY in 1:28,99 then		//And 28 on all other years
				errmsg("%s does not have %d days. Please confirm.",getlabel(LDOB_MONTH_VS1,CDMONTH),CDDAY);
				checkDate = 0;
			endif;		
		endif;		//I had to change the rhyme a bit so that it would fit my code
	elseif CDYEAR = 9999 then		//cleanup for unknown year
		if CDMONTH = 2 then
			if not CDDAY in 1:29,99 then
				errmsg("%s does not have %d days. Please confirm.",getlabel(LDOB_MONTH_VS1,CDMONTH),DAY);
				checkDate = 0;
			endif;
		endif;
	else
		checkDate = 1;
	endif;
end;

//Function uses device's GPS feature to get Location
function getgps()
	gps(open);
	if gps(read,60,5,"Getting GPS location, Please wait...") = 1 then	//read up to 60 seconds. if successful...
		//execsystem(maketext("gps:%f,%f", gps(latitude),gps(longitude)));
		if accept(maketext("Save this location? %f, %f",gps(latitude),gps(longitude)),"Yes","No") = 1 then	//if yes
			LATITUDE = gps(latitude);
			LONGITUDE = gps(longitude);
			getgps = 1;
		endif;
	else
		errmsg("Gps location failed, Please try again");
		getgps = 0;
	endif;
	gps(close);
	
end;

//function changes male(1) to female(2) and vice versa
function changesex(n)
	if n = 1 then 		//if male
		changesex = 2;	//change to female
	elseif n = 2 then	//elseif female
		changesex = 1;	//change to male
	endif;
end;

//function changes son(2) to daughter(3) and vice versa in relationship to head variable
function changechild(nRTH)
	if nRTH = 2 then		//if son
		changechild = 3;	//change to daughter
	elseif nRTH = 3 then	//elseif daughter
		changechild = 2;	//change to son
	endif;
end;

//Show menu after exiting
function OnStop()
	savepartial();		//save last position
	execpff("../Menu/Menu.pff", stop);		//open the menu
end;

{//Function to take a photo using the device's camera. It saves to a filename matching the ID items
function takePhoto()
	photoFileName = pathname(CSEntry) + maketext("Menu/Photos/%03d-%03d-%03d-%d-%03d.jpg", visualvalue(RNDNO),visualvalue(EDNO),visualvalue(PARNO),visualvalue(STRATUM),visualvalue(HHNO)); 
	if visualvalue(RNDNO) = notappl or visualvalue(EDNO) = notappl or visualvalue(PARNO) = notappl or visualvalue(STRATUM) = notappl or visualvalue(HHNO) = notappl then
		errmsg("Please complete the household ID information before taking a photo.");
	elseif direxist(photoDir) then
		execsystem(maketext("camera:%s",photoFileName));
	else
		dircreate(photoDir);
		execsystem(maketext("camera:%s",photoFileName));
	endif;
end;

//Function to view photo of current case
function viewPhoto()
	photoFileName = pathname(CSEntry) + maketext("Menu/Photos/%03d-%03d-%03d-%d-%03d.jpg", visualvalue(RNDNO),visualvalue(EDNO),visualvalue(PARNO),visualvalue(STRATUM),visualvalue(HHNO));  
	if direxist(photoDir) then
		execsystem(maketext("view:%s", photoFileName));
	else
		dircreate(photoDir);
		execsystem(maketext("view:%s", photoFileName));
	endif;
end;
}

{PROC DELETE_FLAG

onfocus
	//if not set, then set to keep
	if $ = notappl then
		$ = 0;
	endif;
}
	

PROC LABOURFORCE_FF
preproc
//---------------------------Declare Variables-----------------------------------
	//photoFileName = pathname(CSEntry) + maketext("Menu/Photos/%03d-%03d-%03d-%d-%03d.jpg", visualvalue(RNDNO),visualvalue(EDNO),visualvalue(PARNO),visualvalue(STRATUM),visualvalue(HHNO)); 
	//photoDir = pathname(CSEntry) + "Menu/Photos";
	
//---------------------------Userbar definition------------------------------------
	userbar(clear);
	userbar(add button, "Get Location", getgps());		//adds a "Get location" button to get coordinates
	{userbar(add button, "Take a photo for the current case", takePhoto());		//adds a button to take a photo of current case. 
	userbar(add button, "View photo of current case", viewPhoto());}		//adds a button to view photo of current case
	userbar(show);

PROC LABOURFORCE_QUEST
onfocus
	//Set occurence labels
	do i = 1 while i <= maxocc(LABOURFORCE_REC001) and LFIRST_NAME(i) <> ""
        setocclabel(LABOURFORCE_REC001(i), strip(LFIRST_NAME(i)));   //first roster
        setocclabel(LABOURFORCE_REC000(i), strip(LFIRST_NAME(i)));   //second roster
    enddo;
    
    setoperatorid(loadsetting("UNAME"));
    
    //DEBUG: DO THIS IN THE CENSUS APP

postproc
	//Mandatory Longitude and latitude capture if not updated
	if visualvalue(LATITUDE) in 0,notappl,default or visualvalue(LONGITUDE) in 0,notappl,default then
		getgps();
	endif;
	
	//if latitude or longitude are invalid, prompt to updatefield. If valid, ask if to leave coordinates or to update
//	while visualvalue(LATITUDE) in {15:90,0:12,}0,notappl,default or visualvalue(LONGITUDE) in {-58:180,-180:-61,}0,notappl,default do		//taken out to make gps capture mandatory
		i=0;
		do until i in 1,2
			i = accept(maketext("Accept current location before proceeding to the next dwelling unit (%f,%f)?",LATITUDE,LONGITUDE),"Get current location again","Accept current location");
		enddo;
		if i = 1 then
			getgps();		//get location
		elseif i = 2 then
			//break;			//cancel the while loop
		endif;
//	enddo;

	
	//store the interview end date
	if LENDDATE = notappl then
		LENDDATE = sysdate("YYYYMMDD");
	endif;
	if LENDTIME = notappl then
		LENDTIME = systime("HHMM");
	endif;
	
	//load case from enumeration report with current ID info and write info to it if no case found, make a new one
	cases = countcases(ENUMERATIONREPORT_DICT where ERED_NO = EDNO and ERFIELD_OFFICER = ENMRTR and ERROUND = RNDNO);		//TODO: change this to count correct cases
	
//	if locate(ENUMERATIONREPORT_DICT,=,maketext("%v%V%V%V",EDNO,PARNO,ENMRTR,HHNO)) and retrieve(ENUMERATIONREPORT_DICT) then		//debug: changed <= to = to see if that makes a difference
	idno = maketext("%V%V%V%V",EDNO,PARNO,ENMRTR,HHNO);
	if loadcase(ENUMERATIONREPORT_DICT,idno) then
		if ERUNIT_NO = notappl then
			ERUNIT_NO = cases + 1;
		endif;
//		if ERPARISH = notappl then
//			ERPARISH = PARNO;
//		endif;
//		if ERSERIAL_NO = notappl then
//			ERSERIAL_NO = HHNO;
//		endif;
		if WEEK_ENDING = notappl then
			WEEK_ENDING = sysdate("YYYYMMDD");
		endif;
		headindex = seek(LRTH = 0);		//find head of household
		if headindex <> 0 then
//			if ERLAST_NAME = "" then
				ERLAST_NAME = strip(LLAST_NAME(headindex));
//			endif;
//			if ERFIRST_NAME = "" then
				ERFIRST_NAME = strip(LFIRST_NAME(headindex));
//			endif;	
			ERMALES = count(SEX where SEX=1);
			ERFEMALES = count(SEX where SEX = 2);
		elseif headindex = 0 or VACANT = 1 then
//			if ERLAST_NAME = "" then
				ERLAST_NAME = maketext("%s",getlabel(VOCCUP_VS1,VOCCUP));
//			endif;
//			if ERFIRST_NAME = "" then
				ERFIRST_NAME = maketext("%s",getlabel(VOCCUP_VS1,VOCCUP));
//			endif;
		endif;	
//		if ERADDRESS = "" then
			ERADDRESS = strip(ADDRES);
//		endif;
//		if ERSTART = notappl then
			ERSTART = DATE;
//		endif;
//		if EREND = notappl then
			EREND = LENDDATE;
//		endif;
		ERHH_SIZE = totocc(LABOURFORCE_REC001);
		ERROUND = RNDNO;

//		if ERREMARKS = "" then
			promptremarks = prompt("Do you have any remarks to be included in the Enumerator Report? Current remarks are:%s",strip(ERREMARKS));
				if promptremarks <> "" then
					ERREMARKS = promptremarks;
				else
					ERREMARKS = ERREMARKS+", "+Promptremarks;
				endif;
//		endif;
		writecase(ENUMERATIONREPORT_DICT);		//write case
		//clear(ENUMERATIONREPORT_DICT);			//clear external case from memory
	else		//write a new case
		loadcase(ENUMERATIONREPORT_DICT);
		ERED_NO = EDNO;
		ERPARISH = PARNO;
		ERROUND = RNDNO;
		ERFIELD_OFFICER = ENMRTR;
		ERSERIAL_NO = HHNO;
		ERUNIT_NO = cases + 1;
		WEEK_ENDING = sysdate("YYYYMMDD");
		ERHH_SIZE = totocc(LABOURFORCE_REC001);
		
		headindex = seek(LRTH = 0);		//find head of household
		if headindex <> 0 then
			ERLAST_NAME = strip(LLAST_NAME(headindex));
			ERFIRST_NAME = strip(LFIRST_NAME(headindex));
		elseif headindex = 0 or VACANT = 1 then
			ERLAST_NAME = maketext("%s",getlabel(VOCCUP_VS1,VOCCUP));
			ERFIRST_NAME = maketext("%s",getlabel(VOCCUP_VS1,VOCCUP));
		endif;	
		ERADDRESS = strip(ADDRES);
		ERSTART = DATE;
		EREND = LENDDATE;
		ERMALES = count(SEX where SEX = 1);
		ERFEMALES = count(SEX where SEX = 2);
		ERREMARKS = prompt("Do you have any remarks to be included in the enumerator report?");
		writecase(ENUMERATIONREPORT_DICT);		//write case
		//clear(ENUMERATIONREPORT_DICT);			//clear external case from memory
	endif;	

	//complete control sheet
	locate(LISTING_DICT,=,maketext("%V%V%V%V%3d%V",RNDNO,EDNO,PARNO,STRATUM,bldgno,HHNO)) and retrieve(LISTING_DICT);
	if LSTFNDATE = notappl then
		LSTFNDATE = sysdate("YYYYMMDD");
	endif;
	if LSTREMARKS = "" then
		if VACANT = 2 then
			LSTREMARKS = LSTREMARKS+" | "+getlabel(INTRVW_VS1,INTRVW(1));		//set remark to value of first interview result DEBUG: need to fix so that it's more accurate
		elseif VACANT = 1 then
			LSTREMARKS = LSTREMARKS+" | "+getlabel(VOCCUP_VS1,VOCCUP);
		endif;
	endif;
	setcaselabel(LISTING_DICT, maketext("%V-%V-%V: %s (%s)",LSTED,LSTBUILDING,LSTSAMPLE,strip(LSTLNAME),strip(LSTREMARKS)));
	writecase(LISTING_DICT);
	
	execpff("../Menu/Menu.pff");		//start menu app as soon as questionnaire exits
	
//----------------------------------------------------------------------------
PROC RNDNO
preproc
	if visualvalue(RNDNO) = notappl then		//if round is blank
		RNDNO = tonumber(sysparm("RNDNO"));		//Go to the pff file and get the system parameter named rndno. Change it to number and assign to variable
		setproperty(RNDNO,"PROTECTED","Yes");	//and set the field to proctected
	endif;
	if visualvalue(EDNO) = notappl then
		EDNO = tonumber(sysparm("EDNO"));	
		setproperty(EDNO,"PROTECTED","Yes");
	endif;
	if visualvalue(PARNO) = notappl then
		PARNO = tonumber(sysparm("PARNO"));	
		setproperty(PARNO,"PROTECTED","Yes");
	endif;
	if visualvalue(STRATUM) = notappl then
		STRATUM = tonumber(sysparm("STRATUM"));	
		setproperty(STRATUM,"PROTECTED","Yes");
	endif;
	if visualvalue(HHNO) = notappl then
		HHNO = tonumber(sysparm("HHNO"));	
		setproperty(HHNO,"PROTECTED","Yes");
	endif;
	if visualvalue(ENMRTR) = notappl then
		ENMRTR = tonumber(sysparm("ENMRTR"));	
		setproperty(ENMRTR,"PROTECTED","Yes");
	endif;
	if strip(ADDRES) = "" then
		ADDRES = sysparm("ADDRESS");	
	endif;
	bldgno = tonumber(sysparm("BLDGNO"));


//--------------------------------------------------------------------------------
PROC PARNO
onfocus
	recode EDNO	=>	$;
			1-181	=>	201;	//St. Michael
			182-295	=>	202;	//Christ Church
			196-335	=>	203;	//St. George
			336-397	=>	204;	//St. Philip
			398-418	=>	205;	//St. John
			419-479	=>	206;	//St. James
			480-508	=>	207;	//St. Thomas
			509-521 =>	208;	//St. Joseph
			522-532	=>	209;	//St. Andrew
			533-559	=>	210;	//St. Peter
			560-583	=>	211;	//St. Lucy
	endrecode;
	noinput;
	
//--------------------------------------------------------
PROC STRATUM
onfocus
	recode PARNO => $;
		201 => 1;
		202,204 => 2;
		203,206,207 => 3;
		205,208-211 => 4;
	endrecode;
	noinput;
	
//-------------------------------------------------------
PROC SUPERV
onfocus
	if ENMRTR > 90 then
		$ = ENMRTR;
	endif;
	
//-------------------------------------------------------------------
PROC ROTATION
postproc
	//set interview date
	if visualvalue(DATE) = notappl then
		DATE = sysdate("YYYYMMDD");
	endif;
	if visualvalue(LSTARTTIME) = notappl then
		LSTARTTIME = systime("HHMM");
	endif;
	
	//TODO: DONE Move promt for gps to end of interview
	//if latitude or longitude are invalid, prompt to updatefield. If valid, ask if to leave coordinates or to update
	{if visualvalue(LATITUDE) in {15:90,0:12,}notappl,default or visualvalue(LONGITUDE) in {-58:180,-180:-61,}notappl,default then
		errmsg("No coordinates recorded.")
		select("Get new coordinates",continue,"Get coordinates later",VACANT);
		getgps();
	else
		errmsg("Current coordinates are %f,%f.",visualvalue(LATITUDE),visualvalue(LONGITUDE))
		select("Keep coordinates",VACANT,"Get new coordinates",continue);
		getgps();
	endif;}
	
//------------------------------------------------------------------------------

PROC NO_CHANGE
{TODO: Plan - Enumerator can select No_Change=1 and skip the questionnaire
				Supervisor must then check and download missing cases from super menu
}
preproc
	ask if RNDNO > 1;

onfocus
	if $ in notappl,default,missing then
		$ = 2;
	endif;

postproc
	if $ = 1 then		//No change
		errmsg("Are you sure that there has been no change from the last round? We can not guarrantee that the information from the last round will be available")
			select("Yes",continue,"No",VACANT);
		idno = maketext("%V%V%V%V%3d%V",RNDNO,EDNO,PARNO,STRATUM,bldgno,HHNO);
		loadcase(LISTING_DICT,idno);		//load corresponding case from control sheet linsting to get a name
		caselabel = maketext("%V(nochange)-%02d-%03d-%03d-%d-%03d",strip(LSTLNAME),RNDNO,EDNO,PARNO,STRATUM,HHNO);	//set case label for now
		setcaselabel(LABOURFORCE_DICT,caselabel);
		
		endlevel;
	endif;

PROC VACANT
onfocus
	idno = maketext("%V%V%V%V%3d%V",RNDNO,EDNO,PARNO,STRATUM,bldgno,HHNO);
	loadcase(LISTING_DICT,idno);
	if LSTSTDATE = notappl then
		LSTSTDATE = DATE;
	endif;
	writecase(LISTING_DICT);
	

PROC VOCCUP

preproc
	//only ask if vacant household
	ask if VACANT = 1;

Postproc
	//set case labels for vacant houses
	if $ = 1 then		//if vacant
		caselabel = maketext("%s-%02d-%03d-%03d-%d-%03d",getlabel(VOCCUP_VS1,$),RNDNO,EDNO,PARNO,STRATUM,HHNO);
		setcaselabel(LABOURFORCE_DICT,caselabel);
	endif;
	
//---------------------------------------------------------------------
PROC VACANT_OTHER
preproc
	ask if VOCCUP = 46;
	
//---------------------------------------------------------
PROC HH_TYP

	//if vacant household, end questionnaire
	if VACANT = 1 then
		endlevel;
	endif;
	
//---------------------------------------------------------------------
PROC LIDNO
preproc
	$ = curocc();		//automatically enter the ID
	noinput;
	
//--------------------------------------------------------
PROC LPREVVISIT
preproc
	ask if VISITNO > 1;
	
{postproc
	if $ = 2 then
		advance to ADDPER;
	endif;
}	
//------------------------------------------------
PROC LNEWMEM
preproc
	ask if VISITNO > 1;

onfocus
	if LPREVVISIT <> 2 then		//if not a member from previous visit
	$ = 2;
		advance to LREASON;
	endif;
	
postproc
	//if not a new member, don't ask why they joined
	if $ = 2 then
		skip to LRTH;
	endif;
	
//---------------------------------------------------------------------
PROC LREASON
preproc	
//only ask if not a member from a previous visit or a new member
	ask if LPREVVISIT in 2:3 or LNEWMEM = 1;
	//ask if VISITNO > 1;	//old code, not sure why it's doing that
	
//------------------------------------------------
PROC LREASON_OTHER
preproc
	//only ask if other is selected
	ask if LREASON = 5;
	
//-----------------------------------------------------
PROC LRTH
postproc
	//Set case labels in case listings to an easier to read format to include name of head
	if $ = 0 then
		caselabel = maketext("%s-%02d-%03d-%03d-%d-%03d",strip(LLAST_NAME),RNDNO,EDNO,PARNO,STRATUM,HHNO);
		setcaselabel(LABOURFORCE_DICT,caselabel);
	endif;
	
	//check that theres is only one head of household
	numheads = count(LRTH where LRTH = 0);		//count the number of heads of household
	if numheads > 1 then
		i = seek(LRTH = 0, @1);			//look for the other head
		errmsg("Too many heads of household.")
		select("Change previous head",LRTH(i), "Change current head",$);
	endif;
	
	//check that theres only 1 spouse or less
	numspouses = count(LRTH where LRTH = 1);		//count the number of spouses
	if numspouses > 1 then
		i = seek(LRTH = 1, @1);			//look for the other spouse
		errmsg("Too many spouses.")
		select("Change previous spouse",LRTH(i), "Change current spouse",$);
	endif;
	
	//check for correct sex of child
	if ($ = 2 and LSEX(curocc()) = 2) or ($ = 3 and LSEX(curocc()) = 1) then		//if Son is female or daughter is male
		i=0;
		do until i in 1,2
			i = accept(maketext("%s is %s",getlabel(LRTH_VS1,$),getlabel(LSEX_VS1,LSEX(curocc()))),
				maketext("Change from %s to %s",getlabel(LSEX_VS1,LSEX(curocc())),getlabel(LSEX_VS1,changesex(LSEX(curocc())))),		//change sex
				maketext("Change %s to %s",getlabel(LRTH_VS1,$),getlabel(LRTH_VS1,changechild($))));		//change RTH
		enddo;
		if i = 1 then		//if sex is to be changed
			LSEX(curocc()) = changesex(LSEX(curocc()));		//change sex
		elseif i = 2 then	//if relationship is to be changed
			$ = changechild(LRTH(curocc()));		//change RTH
		endif;
	endif;
	
	
//---------------------------------------------------------------------
PROC LDOB
Postproc
	if checkdate(LDOB_YEAR,LDOB_MONTH,LDOB_DAY) = 0 then
		reenter;
	endif;
	
	if VISITNO > 1 then		//if second or later visit
		if LPREVVISIT = 3 then	//and person is no longer a member of the household
			skip to ADDPER;
		endif;
	endif; 

//-----------------------------------------------------------------------------------------

PROC LAGE

preproc
	//auto fill the age based on the DOB
	if LDOB_YEAR <> 9999 and LDOB_MONTH <> 99 and LDOB_DAY <> 99 then
		tempage = datediff(LDOB, sysdate("YYYYMMDD"), "Y");
		$ = tempage;
	endif;
	
postproc
	//check that age corresponds to date of birth
	if LDOB_YEAR <> 9999 and LDOB_MONTH <> 99 and LDOB_DAY <> 99 then		//don't check if we don't know the DOB
		tempage = datediff(LDOB, sysdate("YYYYMMDD"), "Y");
		
		if $ <> tempage then
			errmsg("age (%d) does not agree with DOB (%s), please verify",$,edit("9999/99/99",LDOB))
			select("Correct the age", $, "Correct the Date of birth", LDOB,"Keep Age (Don't know Date of Birth)",continue);
			LDOB = 99999999;
		endif;
	endif;
	
//---------------------------------------------------------------------------
PROC LELIGIBLE
onfocus
	//person is eligible if over 15 years
	if LAGE >= 15 then
		$ = 1;
	elseif LAGE < 15 then
		$ = 2;
	endif;
	setproperty($,"PROTECTED","Yes");
	
//----------------------------------------------------
PROC LEARNER
onfocus
	//person is eligible if over 15 years
	if LAGE < 15 then
		$ = 2;
	endif;
	
postproc
	if LAGE <= 15 and $ = 1 then
		errmsg("Person %d years old cannot be an earner",LAGE);
		$ = 2;
	endif;
	
	
//----------------------------------------------------
PROC ADDPER
postproc
	if $ = 2 then
		//check that there's one head of household
		numheads = count(LRTH where LRTH = 0);
		if numheads < 1 then
			errmsg("There are no heads of household listed! Please make someone in the household the head or add another person to the household as the head");
			reenter;
		endif;
		
		NUMBER_OF_PERSONS = count(LSEX);		//Helps sets Second roster size
		HH_SZ = count(LSEX);		//prefills Household size variable
		endgroup;
	endif;

//----------------------------------------------------------------------
PROC LABOURFORCE_REC_FORM
preproc
	ELIGIBLE_PERSONS = count(LSEX where LELIGIBLE = 1);
	NUMBER_OF_EARNERS = count(LSEX where LEARNER = 1);
PROC LABOURFORCE_REC000
postproc
	//if partially responding and person has completed the questionnaire then change to fully responding
	if INTRVW = 3 then
		INTRVW = 1;
	endif;
	
//-----------------------------------------------------
PROC LCOMPLETED
preproc
	//Set occurence label to person's name
	setocclabel(LABOURFORCE_REC000(curocc()), strip(LFIRST_NAME));

	//check that person is eligible to be interviewed
	if LELIGIBLE <> 1 then		//if not eligible
		$ = 89;
		skip to next;
	endif;
	
	if LPREVVISIT = 3 then		//if no longer a member of the household
		$ = 89;
		skip to next;
	endif;
	
onfocus
	a = 1;
	while a <= 99 do 
		vsLabels(a) = "";
		vsNumCodes(a) = 0;
		inc(a);
	enddo;
	
	vsIndex = 1;		//initialise index
	do i = 1 while i <= totocc(LABOURFORCE_REC001) //and LRTH(i) <> notappl
		vsLabels(vsIndex) = maketext("%2d: %s, %s (%s)",LIDNO(i), strip(LLAST_NAME(i)), strip(LFIRST_NAME(i)), getlabel(LRTH_VS1,LRTH(i)));
		vsNumCodes(vsIndex) = i;
		inc(vsIndex);
	enddo;
	vsLabels(vsIndex) = "Proxy (Non-resident)";
	vsNumCodes(vsIndex) = 88;
	inc(vsIndex);
	
	vsNumCodes(vsIndex) = notappl;
	setvalueset($, vsNumCodes, vsLabels);
	
	//if new text fields are blank, copy old text fields to new fields
	if length(strip(OCCUPTR_TEXT2)) = 0 and length(strip(OCCUPTR_TEXT)) > 0 then
		OCCUPTR_TEXT2 = OCCUPTR_TEXT;
	endif;
	if length(strip(OCCTRAINED_TEXT2)) = 0 and length(strip(OCCTRAINED_TEXT)) > 0 then
		OCCTRAINED_TEXT2 = OCCTRAINED_TEXT;
	endif;
	if length(strip(LSTOCCUP_TEXT2)) = 0 and length(strip(LSTOCCUP_TEXT)) > 0 then
		LSTOCCUP_TEXT2 = LSTOCCUP_TEXT;
	endif;
	if length(strip(LSTINDUS_TEXT2)) = 0 and length(strip(LSTINDUS_TEXT)) > 0 then
		LSTINDUS_TEXT2 = LSTINDUS_TEXT;
	endif;
	if length(strip(OCCUP_TEXT2)) = 0 and length(strip(OCCUP_TEXT)) > 0 then
		OCCUP_TEXT2 = OCCUP_TEXT;
	endif;
	if length(strip(SOCCUP_TEXT2)) = 0 and length(strip(SOCCUP_TEXT)) > 0 then
		SOCCUP_TEXT2 = SOCCUP_TEXT;
	endif;
	if length(strip(INDUS_TEXT2)) = 0 and length(strip(INDUS_TEXT)) > 0 then
		INDUS_TEXT2 = INDUS_TEXT;
	endif;
	if length(strip(SINDUS_TEXT2)) = 0 and length(strip(SINDUS_TEXT)) > 0 then
		SINDUS_TEXT2 = SINDUS_TEXT;
	endif;
	if length(strip(FOCCUP_TEXT2)) = 0 and length(strip(FOCCUP_TEXT)) > 0 then
		FOCCUP_TEXT2 = FOCCUP_TEXT;
	endif;
	if length(strip(INCINDUS_TEXT2)) = 0 and length(strip(INCINDUS_TEXT)) > 0 then
		INCINDUS_TEXT2 = INCINDUS_TEXT;
	endif;
	if length(strip(INCOCCUP_TEXT2)) = 0 and length(strip(INCOCCUP_TEXT)) > 0 then
		INCOCCUP_TEXT2 = INCOCCUP_TEXT;
	endif;
	

//--------------------------------------------
PROC INTRVW


onfocus
	if $ = notappl then		//if blank set to partially complete
		$ = 3;
	endif;
	
postproc
	//if no response then skip this person
	if $ = 4 then
		skip to next;
	endif;
	
	//If listing error skip household
	if $ = 2 then
		endgroup;
	endif;
	
	
//---------------------------------------------------------------------
PROC INTD
onfocus
	if $ = notappl then		//if no date then set as today's date
		$ = sysdate("YYYYMMDD");
		noinput;
	endif;
	
//-----------------------------------------------------
PROC HD_HH
onfocus
	
	//if head of household, make this person head of household and skip to individual details
	if LRTH = 0 then		//if head of household
		$ = 1;				//yes person is head
	else
		$ = 2;				//else no person is not head
		skip to INDIVNO;
	endif;
	
postproc	
	//if relationship to head and head of household don't agree
	if ($ = 2 and LRTH = 0) or ($ = 1 and LRTH <> 0) then		
		errmsg("%v is listed as %v, but head of household status is %v. Do you want to change the relationship to head?",strip(LFIRST_NAME(curocc())),LRTH(curocc()),HD_HH)
		select("Yes, change relationship to head",LRTH(curocc()), "No, change this field",$);
	endif;

//---------------------------------------------------------------------------
PROC LNDTNURE
onfocus
	//if house is rented, then land is probably rented
	if OCCPNCY in 2,3 then
		$ = 3;
		noinput;
	endif;

//-----------------------------------------------------------
PROC LNDTNURE_OTHER
preproc
	//only ask if other is selected
	ask if LNDTNURE = 5;
	
//-----------------------------------------------------
PROC HH_SZ
onfocus
	$ = totocc(LABOURFORCE_REC001);

postproc
	if $ > totocc(LABOURFORCE_REC001) then
		errmsg("Are there more persons to be added? Persons listed = %d, Household size = %d",totocc(LABOURFORCE_REC001),$)
		select("Yes",ADDPER,"No",$);
	elseif $ < totocc(LABOURFORCE_REC001) then
		$ = totocc(LABOURFORCE_REC001);
	endif;
	
//------------------------------------------------------------------
PROC EARNERS
onfocus
	if $ = notappl then
		$ = count(LEARNER where LEARNER = 1);
		noinput;
	endif;
	
//----------------------------------------------------
PROC HD_ERNR
onfocus
	if LRTH = 0 then
		$ = LEARNER;
		noinput;
	endif;
	
//--------------------------------------------
PROC MCHILDRN
onfocus
	$ = count(LSEX where LSEX = 1 and LAGE < 15);
	
//-----------------------------------------------------------
PROC FCHILDRN
onfocus
	$ = count(LSEX where LSEX = 2 and LAGE < 15);
	
//-----------------------------------------------------------
PROC INDIVNO
onfocus
	//TODO: prefill information based on household listing ID number
	INDIVNO = LIDNO;
	
	SEX = LSEX;
	RELHD = LRTH;
	BIRTHD = LDOB;
	AGE = LAGE;
	advance to CNTRY_CD;
	
	
//---------------------------------------------------------------------------
PROC RELHD

	//compare to HD_HH to verify head of household
{	if not ($ = 0 and HD_HH = 1) then	
		if not ($ in 1:8 and HD_HH = 2) then
			errmsg("Relation to head (%d) does not match with Head of shousehold status (%d)",$,HD_HH)
			select("Change relation to head",$,"Change head of household status",HD_HH);
		endif;
	endif;  
}
//---------------------------------------------------------------------------
PROC RELHD_OTHER
preproc
	//only ask if other is selected
	ask if RELHD = 8;
	
//-----------------------------------------------------
PROC AGE

	//check that age corresponds to date of birth
	tempage = datediff(BIRTHD, sysdate("YYYYMMDD"), "Y");
		
	if BYR <> 9999 and BMO <> 99 and BDY <> 99 then
		if $ <> tempage then
			errmsg("age (%d) does not agree with DOB (%s), please verify",$,edit("9999/99/99",BIRTHD))
			select("Correct the age", $, "Correct the Date of birth", BIRTHD,"Keep Age (Don't know Date of Birth",continue);
			BIRTHD = notappl;
		endif;
	endif;

//---------------------------------------------------------------------------
PROC CNTRY_CD_OTHER
preproc
	//only ask if country (Nationality) is Other Country
	ask if CNTRY_CD = 900;
	
//---------------------------------------
PROC EDUCLEV_OTHER
preproc
	//only ask if other is selected
	ask if EDUCLEV = 5;
	
//-----------------------------------------------------
PROC QUALLEV_OTHER
preproc
	//only ask if other is selected
	ask if QUALLEV = 9;
	
//-----------------------------------------------------
PROC CTRAINING
	
	//if not currently being trained, skip to if ever trained
	if $ = 2 then
		skip to TRAINEDFOROCC;
	endif;
	
//---------------------------------------------------------------------------

PROC OCCUPTR_TEXT2
postproc
	if length(strip($(curocc()))) > 0 then
		OCCUPTR_TEXT(curocc()) = $;
	endif;
	
//------------------------------------------------
PROC TRAINEDFOROCC

	//if never trained, skip to Worked last week
	if $ = 2 then
		skip to WORKED;
	endif;
	
//---------------------------------------------------------------------------

PROC OCCTRAINED_TEXT2
postproc
	if length(strip($(curocc()))) > 0 then
		OCCTRAINED_TEXT(curocc()) = $;
	endif;
	
//------------------------------------------------
PROC WORKED

	//if worked, skip to full time or part time
	if $ = 1 then
		skip to FULLPART;
	endif;
	
//---------------------------------------------------------------------------
PROC REGJOB

	//if not absent, skip to Major activity
	if $ = 2 then
		skip to MAJACTV;
	endif;
	
//---------------------------------------------------------------------------
PROC REASABS_OTHER
preproc
	//only ask if other is selected
	ask if REASABS = 7;
	
//-----------------------------------------------------
PROC PAIDABS
	if $ = 1 then
		skip to FULLPART;
	endif;
PROC TIMEABS

	//if has a job, skip to Full time or part time
	if WORKED = 1 or $ = 1 then
		skip to FULLPART;
	endif;

//---------------------------------------------------------------------------
PROC MAJACTV_OTHER
preproc
	//only ask if other is selected
	ask if MAJACTV = 6;
	
//-----------------------------------------------------
PROC SEEKING

	//if not seeking work, skip to reason for not seeking work
	if $ = 2 then
		skip to REASNSK;
	endif;
	
//-----------------------------------------------------------------
PROC METHOD

	//skip to last looked for work
	skip to LSTLOOK;
PROC METHOD_OTHER
preproc
	//only ask if other is selected
	ask if METHOD = 6;
	
//-----------------------------------------------------
PROC REASNSK_OTHER
preproc
	//only ask if other is selected
	ask if REASNSK = 8;
	
//-----------------------------------------------------
PROC LSTLOOK

	//if never looked of looked for 4 months or more, skip to Hoping for job
	if $ in 1,4 then
		skip to HPWORK;
	endif;
	
//-----------------------------------------------------------------
PROC WILLING

	//if not willing, skip to ever worked
	if $ = 2 then
		skip to EVERWKD;
	endif;
	
//---------------------------------------------------------------
PROC ABLE

	//if not able, skip to ever worked
	if $ = 2 then
		skip to EVERWKD;
	endif;
	
//---------------------------------------------------------------
PROC EVERWKD

	//if never worked, skip to when first looked for work
	if $ = 2 then
		skip to FRSTLOOK;
	endif;
	
//--------------------------------------------------------------------

PROC LSTWRKD
postproc
	if $ in 1:6,9 then
		skip to LSTOCCUP_TEXT2;
	endif;
	
//------------------------------------------------------------
PROC LSTWRKD_OTHER
preproc
	//only ask if other is selected
	//DEBUG: WHY IS THIS HERE??? THIS DOESN'T EXIST ON THE FORM! Hopefully the below statement ensures that it is never called untill I confirm
	ask if LSTWRKD = 8;
	
//-----------------------------------------------------

PROC LSTOCCUP_TEXT2
postproc
	if length(strip($(curocc()))) > 0 then
		LSTOCCUP_TEXT(curocc()) = $;
	endif;
	
//------------------------------------------------
PROC LSTINDUS_TEXT2
postproc
	if length(strip($(curocc()))) > 0 then
		LSTINDUS_TEXT(curocc()) = $;
	endif;
	
//------------------------------------------------
PROC LSTINDUS_SECTOR
Preproc
	ask if length(strip(LSTINDUS_TEXT2)) > 0;
	
{onfocus
	if $ in 1,2 then
		$ = 9;
	endif;
}
//------------------------------------------------------------------
PROC U2EARNGS
postproc
	//end of Unemployed section
	skip to next;

//--------------------------------------------------------
PROC FULLPART

	//if full time, skip to more than one job
	if $ = 1 then
		skip to TWOJOBS;
	endif;
	
//-----------------------------------------------------------------
PROC RSNPART_OTHER
preproc
	//only ask if other is selected
	ask if RSNPART = 8;
	
//-----------------------------------------------------
PROC TWOJOBS

	//if not more than one job, skip to employer status
	if $ = 2 then
		skip to EMPLSTAT;
	endif;
	
//---------------------------------------------------------------
PROC RSN2JOBS_OTHER
preproc
	//only ask if other is selected
	ask if RSN2JOBS = 4;
	
//-----------------------------------------------------
PROC EMPLSTAT_OTHER
preproc
	//only ask if other is selected
	ask if EMPLSTAT = 7;
	
//-----------------------------------------------------
PROC EMPL2STAT

preproc
	//only ask if more than one job
	ask if TWOJOBS = 1
	
//--------------------------------------------------------
PROC EMPL2STAT_OTHER
preproc
	//only ask if other is selected
	ask if EMPL2STAT = 7;
	
//-----------------------------------------------------

PROC OCCUP_TEXT2
postproc
	if length(strip($(curocc()))) > 0 then
		OCCUP_TEXT(curocc()) = $;
	endif;
	
//------------------------------------------------
PROC SOCCUP_TEXT2
preproc
	//only ask if more than one job
	ask if TWOJOBS = 1;
	
postproc
	if length(strip($(curocc()))) > 0 then
		SOCCUP_TEXT(curocc()) = $;
	endif;
	
//--------------------------------------------------------
PROC INDUS_TEXT2
postproc
	if length(strip($(curocc()))) > 0 then
		INDUS_TEXT(curocc()) = $;
	endif;
	
//--------------------------------------------------------
PROC INDUS_SECTOR
Preproc
	ask if length(strip(INDUS_TEXT2)) > 0;
	
	if $ = notappl then
		$ = 9;
	endif;

//--------------------------------------------------
PROC SINDUS_TEXT2
preproc
	//only ask if more than one job
	ask if TWOJOBS = 1;
	
postproc
	if length(strip($(curocc()))) > 0 then
		SINDUS_TEXT(curocc()) = $;
	endif;
	
//--------------------------------------------------------
PROC SINDUS_SECTOR
Preproc
	ask if length(strip(SINDUS_TEXT2)) > 0;
{onfocus		
	if $ = notappl then
		$ = 9;
	endif;
}
//---------------------------------------------------
PROC EXPRNCE2

preproc
	//only ask if more than one job
	ask if TWOJOBS = 1
	
//--------------------------------------------------------
PROC EARNGS2

preproc
	//only ask if more than one job
	ask if TWOJOBS = 1
	
//--------------------------------------------------------
PROC AVGEARNS2

preproc
	//only ask if more than one job
	ask if TWOJOBS = 1
	
//--------------------------------------------------------
PROC NHRSWRKD

postproc
	//end if worked 40 or more hours
	if HRSWRKD in 10,11 then
		skip to next;
	endif;

//-----------------------------------------------------------------------
		
PROC RSNLESS_OTHER
preproc
	//only ask if other is selected
	ask if RSNLESS = 12;
	
//-----------------------------------------------------
PROC ADDWRK
postproc
	//if not willling to do additional work, end interview
	if $ = 2 then
		skip to next;
	endif;

//-----------------------------------------------------------------------
PROC KINDWRK
postproc
	//end of employed section
	skip to next;
	
//--------------------------------------------------------
PROC HPWORK

	//if not hoping for job, skip to ever worked
	if $ = 2 then
		skip to WORKBEFO;
	endif;
	
//-----------------------------------------------------------
PROC FOCCUP_TEXT2
postproc
	if length(strip($(curocc()))) > 0 then
		FOCCUP_TEXT(curocc()) = $;
	endif;
	
//--------------------------------------------------------
PROC INCINDUS_TEXT2
postproc
	if length(strip($(curocc()))) > 0 then
		INCINDUS_TEXT(curocc()) = $;
	endif;
	
//--------------------------------------------------------
PROC INCINDUS_SECTOR
Preproc
	ask if length(strip(INCINDUS_TEXT2)) > 0;
{onfocus	
	if $ = notappl then
		$ = 9;
	endif;
}
//----------------------------------------------------------
PROC WORKBEFO

	//if never worked before, skip to main sources of livelihood
	if $ = 2 then
		skip to SCINCOME;
	endif;
	
//---------------------------------------------------------------------
PROC INCOCCUP_TEXT2
postproc
	if length(strip($(curocc()))) > 0 then
		INCOCCUP_TEXT(curocc()) = $;
	endif;
	
//--------------------------------------------------------
